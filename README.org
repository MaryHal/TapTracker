* TapTracker
This project aims to log various game data (and inputs) during a game of [[https://en.wikipedia.org/wiki/Tetris:_The_Grand_Master][Tetris: The Grandmaster 2 Plus]] (TGM2p/TGM2+/TAP) when run in an emulator ([[http://mamedev.org/][MAME]]). TapTracker runs alongside the emulator and performs its logging in real-time. This is linux-only for now.

[[https://github.com/sanford1/BlockTracker][BlockTracker]] was my first attempt at this. It was done by interacting with [[https://github.com/scanmem/scanmem][scanmem]] as a child process. Ultimately, this meant every time I started up the game, I had to probe for the memory address holding level data (not unlike someone using [[http://www.cheatengine.org/][cheat-engine]]) then pass the proper memory addresses to BlockTracker. Along the way I wrote quite possibly the worst code I've ever written. Despite being such a small program, it wasn't too pleasant for me to look at and maintain. (There's one upside though: this method was game-agnostic; I could probe any TGM-style game for level data).

In contract, TapTracker takes a more direct route by modifying a version of MAME to output relevant data. Only a single file in the MAME source code has been changed ($MAME/emu/cpuexec.c) and the patch file can be found here at =tgm2p_cpuexec_patch=. This file can be applied via [[http://linux.die.net/man/1/patch][patch]]. Keep in mind that the go-to version of MAME for TGM is a modified version of shmupmame (which in turn is a modded version of MAME). Some info about it can be found [[http://tetrisconcept.net/wiki/Modded_MAME][here]]. The build process on Linux has a couple quirks, so I might write a build guide in the near future.

The patch uses debug functions in MAME, so debug functionality must be enabled with =-debug= or the =-c= switch (enables the cheat engine).

** Building TapTracker

After cloning this repository, retrieve all the submodules:

#+BEGIN_SRC sh
  git submodule update --init --recursive
#+END_SRC

Building this project requires [[https://www.python.org/][python]] and [[https://martine.github.io/ninja/][ninja]]:

#+BEGIN_SRC sh
  python bootstrap.py
  ninja
#+END_SRC

** Running TapTracker

TapTracker expects shmupmametgm as its first argument, then each subsequent argument is passed to shmupmametgm. Example:

#+BEGIN_SRC sh
  /path/to/TapTracker shmupmametgm -c -record last.inp
#+END_SRC

** Screenshots

UI is a work-in-progress.

|[[ ./screenshot01.png]] | [[./screenshot02.png]] |

The top portion graphs the time vs level during the last three sections. Immediately below that is a counter for line clears (singles : doubles : triples : tetrises). Then below that is a input display per level.
